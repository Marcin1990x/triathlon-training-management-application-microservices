services:
    mongodb:
        container_name: mongodb-container
        image: mongo
        ports:
          - "27017:27017"
        volumes:
          - mongodb_data:/data/db
        networks:
          - mongo-network
    postgres:
        container_name: postgres_container
        image: postgres
        environment:
          POSTGRES_USER: triathlon
          POSTGRES_PASSWORD: triathlon
          PGDATA: /data/postgres
        volumes:
          - postgres:/data/postgres
        ports:
          - "5432:5432"
        networks:
          - postgres
        restart: unless-stopped
    pgadmin:
      container_name: pgadmin_container
      image: dpage/pgadmin4
      environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
        PGADMIN_CONFIG_SERVER_MODE: 'False'
      volumes:
        - pgadmin:/var/lib/pgadmin
      ports:
        - "5050:80"
      networks:
        - postgres
      restart: unless-stopped
    rabbitmq:
      container_name: rabbitmq
      image: rabbitmq:3-management
      ports:
        - "5672:5672"
        - "15672:15672"
      networks:
        - postgres
    zipkin:
      container_name: zipkin
      image: openzipkin/zipkin
      ports:
        - "9411:9411"
      networks:
        - microservices-network
        - postgres
    config-server:
      container_name: config-server
      image: marcin1990/config-server-container:latest
      ports:
        - "8085:8085"
      depends_on:
        - service-registry-container
      networks:
        - microservices-network
        - postgres
      environment:
        - SPRING_PROFILES_ACTIVE=docker
    service-registry-container:
      container_name: service-registry-container
      image: marcin1990/service-registry-container:latest
      ports:
        - "8761:8761"
      depends_on:
        - rabbitmq
        - zipkin
        - postgres
        - pgadmin
        - mongodb
      networks:
        - microservices-network
        - postgres
    gateway-container:
      container_name: gateway-container
      image: marcin1990/gateway-container:latest
      ports:
        - "8086:8086"
      depends_on:
        - service-registry-container
      networks:
        - microservices-network
        - postgres
      environment:
        - SPRING_PROFILES_ACTIVE=docker
    functions-container:
      container_name: functions-container
      image: marcin1990/functions-container:latest
      ports:
        - "8081:8081"
      depends_on:
        - service-registry-container
        - config-server
      networks:
        - microservices-network
        - postgres
      environment:
        - SPRING_PROFILES_ACTIVE=docker
    strava-container:
      container_name: strava-container
      image: marcin1990/strava-container:latest
      ports:
        - "8082:8082"
      depends_on:
        - service-registry-container
        - config-server
      networks:
        - mongo-network
        - microservices-network
        - postgres
      environment:
        - SPRING_PROFILES_ACTIVE=docker
        - STRAVA_CLIENT_ID=*
        - STRAVA_CLIENT_SECRET=*
    trainings-container:
      container_name: trainings-container
      image: marcin1990/trainings-container:latest
      ports:
        - "8084:8084"
      depends_on:
        - service-registry-container
        - config-server
      networks:
        - mongo-network
        - microservices-network
        - postgres
      environment:
        - SPRING_PROFILES_ACTIVE=docker
    users-container:
      container_name: users-container
      image: marcin1990/users-container:latest
      ports:
        - "8080:8080"
      depends_on:
        - service-registry-container
        - config-server
      networks:
        - microservices-network
        - postgres
      environment:
        - SPRING_PROFILES_ACTIVE=docker
networks:
  postgres:
    driver: bridge
  mongo-network:
    driver: bridge
  microservices-network:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongodb_data: