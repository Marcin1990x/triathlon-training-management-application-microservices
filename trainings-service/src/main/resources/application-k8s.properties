functions-service.url=http://functions
strava-service.url=http://strava
trainings-service.url=http://trainings
users-service.url=http://users

spring.application.name=trainings-service
server.port = 8084

# PostgreSQL
spring.h2.console.enabled=true
spring.datasource.url=jdbc:postgresql://postgres:5432/training_plans
spring.datasource.username=triathlon
spring.datasource.password=triathlon
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.sql.init.mode=always

logging.level.org.springframework.security:DEBUG


# MongoDB
spring.data.mongodb.host=mongodb
spring.data.mongodb.port=27017
spring.data.mongodb.database=training-realizations

# Eureka
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

# Zipkin
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.tracing.sampling.probability=1.0

# Kafka
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
topics.training-plan.name=training-plan-topic
topics.training-plan.partitions=2
topics.training-plan.replicas=1
